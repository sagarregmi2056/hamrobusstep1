
The query for the graphql api are given below:




................................................................................................................................................
allOwners: [Owner]



query {
  allOwners {
    name 
    citizenshipNumber
    role
  }
}
...............................................................................................................................................

allUsers: [User]




query AllUsers {
  allUsers {
    _id
    name
    createdAt
  }
}
................................................................................................................................................


allTravels: [Travel]



query AllTravels {
  allTravels {
    name
  }
}

.................................................................................................................................................
query Travel($travelId: ID!) {
  travel(id: $travelId) {
    name
  }
}


arguments: {
  "travelId": "64d9ffeb931b4de4e06a361d"
}
...................................................................................................................................................
allLocations: [Location]


query {
  allLocations {
    name
    district
  }
}
................................................................................................................................................



query {
  location(id: "64d9edb7f712ba2fe20ae35a") {
    name
    district
  }
}
.................................................................................................................................................
busesByType: [Bus]


query BusesByType($type: String!) {
  busesByType(type: $type) {
    name
    _id
    busNumber
    seatsAvailable
    slug
    fare
  }
}


arguments:
{
  "type":"AC"
}
.................................................................................................................................................
bus: Bus




query {
  bookingsByVerification(verification: "verified") {
    _id
    price
    passengers
    seatNumber
    boardingPoints
    
    guest {
      name
    }
    user {
      _id
    }
    bus {
      name
      owner {
        name
      }
    }
  }
}

output:{
  "data": {
    "bookingsByVerification": [
      {
        "_id": "64db5bf6eebeeacbce01b1af",
        "price": "100",
        "passengers": 2,
        "seatNumber": "A1",
        "boardingPoints": "Boarding Point D",
        "guest": null,
        "user": null,
        "bus": {
          "name": "Hamronayabus",
          "owner": {
            "name": "sagar regmi"
          }
        }
      }
    ]
  }
}